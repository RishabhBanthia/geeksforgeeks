#include <stdio.h>
#include <stdlib.h>
   
int main ()
{
  FILE * pFile;
  pFile = fopen ("myfile.txt", "r");
  if (pFile == NULL)
  {
    printf ("Error opening file");
    exit (1);
  }
  else
  {
    /* file operations here */
  }
  return 0;
}


example:
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
  
int main(void)
{
    pid_t pid = fork();
      
    if ( pid == 0 )
    {
       exit(9999); //passing value more than 255
    }
  
    int status;
    waitpid(pid, &status, 0);
  
    if ( WIFEXITED(status) )
    {
        int exit_status = WEXITSTATUS(status);
          
        printf("Exit code: %d\n", exit_status);
    }
  
return 0;
}


#include<stdio.h>
#include<stdlib.h>
int main()
{
  FILE *fp = fopen("C:\\myfile.txt", "w");
    
  if(fp == NULL)
  {
    printf("\n could not open file ");
    getchar();
    exit(1);
  }  
    
  fprintf(fp, "%s", "Geeks for Geeks");
    
  /* ....... */
  /* ....... */
  /* Something went wrong so terminate here */  
  abort();
    
  getchar();
  return 0;  
}


#include<assert.h>
  
void open_record(char *record_name)
{
    assert(record_name != NULL);
    /* Rest of code */
}
  
int main(void)
{
   open_record(NULL);
}
