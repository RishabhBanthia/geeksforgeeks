#include <stdio.h>

int main()
{
	int arr[5];
	arr[0] = 5;
	arr[2] = -10;
	arr[3 / 2] = 2; // this is same as arr[1] = 2
	arr[3] = arr[0];

	printf("%d %d %d %d", arr[0],
		arr[1], arr[2], arr[3]);

	return 0;
}






#include <iostream>
using namespace std;

int main()
{
	int arr[5];
	arr[0] = 5;
	arr[2] = -10;

	// this is same as arr[1] = 2
	arr[3 / 2] = 2;
	arr[3] = arr[0];

	cout << arr[0] << " " << arr[1] << " " << arr[2] << " "
		<< arr[3];

	return 0;
}








// This C program compiles fine as index out of bound is not checked in C.
#include <stdio.h>

int main()
{
	int arr[2];
	printf("%d ", arr[3]);
	printf("%d ", arr[-2]);
	return 0;
}







// This C++ program compiles fine as index out of bound is not checked in C.
#include <iostream>
using namespace std;

int main()
{
	int arr[2];
	cout << arr[3] << " ";
	cout << arr[-2] << " ";
	return 0;
}








// C program to demonstrate that array elements are stored contiguous locations
#include <stdio.h>
int main()
{
	// an array of 10 integers.
	int arr[5], i;
	printf("Size of integer in this compiler is %lu\n", sizeof(int));
	for (i = 0; i < 5; i++)
	{
		printf("Address arr[%d] is %p\n", i, &arr[i]);
	}
	return 0;
}








// C++ program to demonstrate that array elements are stored contiguous locations
#include <iostream>
using namespace std;

int main()
{
	// an array of 10 integers.
	int arr[5], i;
	cout << "Size of integer in this compiler is "
		<< sizeof(int) << "\n";
	for (i = 0; i < 5; i++)
		cout << "Address arr[" << i << "] is " << &arr[i]
			<< "\n";
	return 0;
}









#include<bits/stdc++.h>
using namespace std;

int main()
{
	int arr[6]={11,12,13,14,15,16};
	// Way -1
	for(int i=0;i<6;i++)
		cout<<arr[i]<<" ";

cout<<endl;
	// Way 2
	cout<<"By Other Method:"<<endl;
	for(int i=0;i<6;i++)
		cout<<i[arr]<<" ";

	cout<<endl;

	return 0;
}

// Contributed by Akshay Pawar ( Username - akshaypawar4)
