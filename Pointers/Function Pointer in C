#include <stdio.h>
void fun(int a)
{
	printf("Value of a is %d\n", a);
}

int main()
{
	void (*fun_ptr)(int) = &fun;
	(*fun_ptr)(10);

	return 0;
}










#include <stdio.h>
void fun(int a)
{
	printf("Value of a is %d\n", a);
}
int main()
{
	void (*fun_ptr)(int) = fun;
	fun_ptr(10);
	return 0;
}












#include <stdio.h>
void add(int a, int b)
{
	printf("Addition is %d\n", a+b);
}
void subtract(int a, int b)
{
	printf("Subtraction is %d\n", a-b);
}
void multiply(int a, int b)
{
	printf("Multiplication is %d\n", a*b);
}
int main()
{
	void (*fun_ptr_arr[])(int, int) = {add, subtract, multiply};
	unsigned int ch, a = 15, b = 10;
	printf("Enter Choice: 0 for add, 1 for subtract and 2 " "for multiply\n");
	scanf("%d", &ch);
	if (ch > 2) return 0;
	(*fun_ptr_arr[ch])(a, b);

	return 0;
}










#include <stdio.h>
void fun1() { printf("Fun1\n"); }
void fun2() { printf("Fun2\n"); }

void wrapper(void (*fun)())
{
	fun();
}
int main()
{
	wrapper(fun1);
	wrapper(fun2);
	return 0;
}










#include <stdio.h>
#include <stdlib.h>

int compare (const void * a, const void * b)
{
	return ( *(int*)a - *(int*)b );
}
int main ()
{
	int arr[] = {10, 5, 15, 12, 90, 80};
	int n = sizeof(arr)/sizeof(arr[0]), i;

	qsort (arr, n, sizeof(int), compare);

	for (i=0; i<n; i++)
	{
		printf ("%d ", arr[i]);
	}
	return 0;
}







	
	
	
	
	


#include <stdio.h>
#include <stdbool.h>

bool compare (const void * a, const void * b)
{
return ( *(int*)a == *(int*)b );
}
int search(void *arr, int arr_size, int ele_size, void *x, bool compare (const void * , const void *))
{
	char *ptr = (char *)arr;
	int i;
	for (i=0; i<arr_size; i++)
	{
		if (compare(ptr + i*ele_size, x))
		return i;
	}
	return -1;
}
int main()
{
	int arr[] = {2, 5, 7, 90, 70};
	int n = sizeof(arr)/sizeof(arr[0]);
	int x = 7;
	printf ("Returned index is %d ", search(arr, n, sizeof(int), &x, compare));
	return 0;
}
