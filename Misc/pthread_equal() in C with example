#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <pthread.h>

pthread_t tmp_thread;

void* func_one(void* ptr)
{
	if (pthread_equal(tmp_thread, pthread_self())) 
	{
		printf("equal\n");
	} 
	else 
	{
		printf("not equal\n");
	}
}

// driver code
int main()
{
	pthread_t thread_one;

	tmp_thread = thread_one;
	pthread_create(&thread_one, NULL, func_one, NULL);
	pthread_join(thread_one, NULL);
}













#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <pthread.h>

pthread_t tmp_thread;

void* func_one(void* ptr)
{
	tmp_thread = pthread_self()
}

void* func_two(void* ptr)
{
	pthread_t thread_two = pthread_self();

	if (pthread_equal(tmp_thread, thread_two)) {
		printf("equal\n");
	} else {
		printf("not equal\n");
	}
}

int main()
{
	pthread_t thread_one, thread_two;
	pthread_create(&thread_one, NULL, func_one, NULL);
	pthread_create(&thread_two, NULL, func_two, NULL);
	pthread_join(thread_one, NULL);
	pthread_join(thread_two, NULL);
}
