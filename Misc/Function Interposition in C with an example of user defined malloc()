#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>

int main(void)
{
	void *ptr = malloc(4);
	
	printf("Hello World\n");
	return 0;
}
















#include <stdio.h>
#include <malloc.h>

void *mymalloc(size_t s)
{
    printf("My malloc called");
    return NULL;
}













// filename : mymalloc.c
/* Link-time interposition of malloc using the
static linker’s (ld) "--wrap symbol" flag. */
#include <stdio.h>

// __real_malloc() is used to called actual library
// malloc()
void *__real_malloc(size_t size);

// User defined wrapper for malloc()
void *__wrap_malloc(size_t size)
{
printf("My malloc called");
return NULL;
}









/* Run-time interposition of malloc based on dynamic linker’s
(ld-linux.so) LD_PRELOAD mechanism */
#define _GNU_SOURCE
#include <stdio.h>

void *malloc(size_t s)
{
printf("My malloc called\n");
return NULL;
}
